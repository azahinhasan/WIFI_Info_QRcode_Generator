{"version":3,"sources":["input.js","components/qrCode.js","article.js","App.js","reportWebVitals.js","index.js","App.css","button.css","components/qrCode.css","input.css"],"names":["Input","className","classes","table","type","onChange","this","props","onSSIDchange","input","disabled","state","textEditable","onPASSWORDchange","name","id","onENCRYPTIONchange","value","onClick","onHIDDENchange","inputCheckBox","Component","QRcode","returnValue","size","level","includeMargin","downloadQR","pngUrl","document","getElementsByTagName","toDataURL","downloadLink","createElement","href","download","body","appendChild","click","removeChild","data","ssid","encryption","password","String","hidden","console","log","QrCode","Print","noPrint","classesBtn","button","setTimeout","window","print","Article","App","makeQR","downloadPNG","disabledButton","seeQRbtn","event","setState","target","makeQRcode","tryAgain","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4609a1ec.chunk.js","sourcesContent":["\r\nimport React,{Component,Fragment} from 'react';\r\nimport classes from './input.css';\r\n\r\n\r\n\r\n\r\nclass Input extends Component{ //class based compornent....\r\n\r\n\r\n    render(){\r\n        return(\r\n    \r\n        <div> \r\n            \r\n            <table className={classes.table}>\r\n                <tr>\r\n                    <td>\r\n                    SSID:\r\n                    </td>\r\n                    <td>\r\n                    <input type=\"text\" \r\n                    onChange={this.props.onSSIDchange}\r\n                    className={classes.input}\r\n                    disabled={this.props.state.textEditable}/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                    PASSWORD:\r\n                    </td>\r\n                    <td>\r\n                    <input type=\"text\" \r\n                    onChange={this.props.onPASSWORDchange}\r\n                    className={classes.input}\r\n                    disabled={this.props.state.textEditable}/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                    ENCRYPTION:\r\n                    </td>\r\n                    <td>\r\n                    <select name=\"\" id=\"\"\r\n                    onChange={this.props.onENCRYPTIONchange}\r\n                    disabled={this.props.state.textEditable}>\r\n                        <option value=\"WPA\">WPA/WPA2</option>\r\n                        <option value=\"WEP\">WEP</option>\r\n                        <option value=\"nopass\">None</option>\r\n                    </select>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n\r\n                    </td>\r\n                    <td>\r\n                    <input type=\"checkbox\" onClick={this.props.onHIDDENchange}\r\n                    className={classes.inputCheckBox}\r\n                    />Hidden\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            \r\n       \r\n            \r\n        </div>\r\n\r\n        );      \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n//export default Radium(person);\r\n//export default person; //for Function base\r\nexport default Input; //for class based coz name of class is Person\r\n\r\n//export default withClass(Person,classes.Person); ","\r\nimport React,{Component} from 'react';\r\nimport  classes from'./qrCode.css';\r\nimport QrCode from 'react.qrcode.generator';\r\n//npm install react.qrcode.generator\r\nimport classesBtn from '../button.css';\r\n\r\n\r\nclass QRcode extends Component{ \r\n\r\n\r\n\r\n\r\n\r\n    returnValue = (value) =>{\r\n\r\n    return <QrCode \r\n    size={290}\r\n    level={\"H\"}\r\n    includeMargin={true}\r\n    value={value}/>\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n downloadQR = () => {\r\n    var can = document.getElementsByTagName(\"canvas\");\r\n\r\n    const pngUrl = can[0].toDataURL(\"image/png\");\r\n\r\n    let downloadLink = document.createElement(\"a\");\r\n    downloadLink.href = pngUrl;\r\n    downloadLink.download = \"qrCODE.png\";\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n    document.body.removeChild(downloadLink);\r\n  };\r\n\r\n\r\n    render(){\r\n        const value = \"WIFI:S:\"+this.props.data.ssid+\";T:\"+this.props.data.encryption\r\n        +\";P:\"+this.props.data.password+\";H:\"+String(this.props.data.hidden)+\";\" ;\r\n\r\n        {console.log(value)}\r\n\r\n        return(\r\n    \r\n        <div>  \r\n            <table className={classes.table}>\r\n                <tr>\r\n                    <td>\r\n                        <h2 className={classes.QrCode}>Scan For WiFi Information </h2>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <h4 className={classes.Print}>SSID:{this.props.data.ssid}</h4>\r\n                        <br></br>\r\n                        <div className={classes.QrCode}>{this.returnValue(value)}</div>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                    <div  className={classes.noPrint}>\r\n                        <button onClick={this.downloadQR} className={classesBtn.button}>Download(.PNG)</button>\r\n                        <br></br>\r\n                        <button onClick={() => setTimeout(window.print, 1)} className={classesBtn.button}>Print</button>\r\n                    </div>\r\n                    </td>\r\n                </tr>\r\n            </table>   \r\n            \r\n           \r\n        \r\n            {/* { this.props.data.downloadPNG ? (\r\n\r\n                <div>\r\n                    aa{this.downloadQR}\r\n                </div>\r\n            ) : null } */}\r\n        </div>\r\n\r\n        \r\n\r\n        )     \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default QRcode; \r\n","\r\nimport React,{Component} from 'react';\r\nimport classes from './App.css';\r\n\r\n\r\n\r\nclass Article extends Component{ \r\n\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <span>SSID : </span>Its stands for Service Set IDentifier and is your network’s name. \r\n                        If you open the list of Wi-Fi networks on your laptop or phone, you’ll see a list of SSIDs. Wireless router or access points broadcast SSIDs so nearby devices can find and display any available networks. \r\n                        Learn how they work and how to find yours below.\r\n                    </li>\r\n                    <li>\r\n                        <span>ENCRYPTION : </span>Wireless encryption secures your wireless network with an authentication protocol. \r\n                        It requires a password or network key when a user or device tries to connect.\r\n                        Using some encryption is always better than using none.<br></br>\r\n                        Thare are TWO encryption tools used to secure wireless connection :\r\n                        <ul>\r\n                            <li>\r\n                                <span>WPA/WPA2 :</span> WPA stands for Wireless Protected Access. \r\n                                WPA2 is the second version of the WPA standard. WPA2 is the most secure of the three. If your wireless card and router support WPA2,\r\n                                that is what you should use when setting up your wireless network.\r\n                            </li>\r\n                            <li>\r\n                                <span>WEP :</span> WEP stands for Wired Equivalent Privacy.\r\n                                WEP is the least secure of these standards, and you should not use it if you can avoid it.\r\n                            </li>\r\n                \r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <span>Hidden : </span> Optional. Tick if you want to hide the SSID. \r\n                        Note this was mistakenly also used to specify phase 2 method in releases up to 4.7.8 / Barcode Scanner 3.4.0. \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n        \r\n\r\n           \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Article; \r\n","import React, { Component } from 'react';\nimport classes from './App.css';\nimport Input from './input';\nimport QrCode from './components/qrCode';\nimport classesBtn from './button.css';\nimport Aritcle from './article';\nclass App extends Component {\n\n\n\n  state={\n    //ssid:5,\n\n    ssid:'0',\n    password:'',\n    encryption:'WPA',\n    hidden: true,\n    makeQR:false,\n    downloadPNG:true,\n    disabledButton:false,\n    textEditable:false,\n    seeQRbtn:false\n\n  };\n\n\n\nonSSIDchange = event => {\n    this.setState({ ssid: event.target.value });\n\n};\n\nonPASSWORDchange = event => {\n  this.setState({ password: event.target.value });\n\n};\n\nonENCRYPTIONchange = event => {\n  this.setState({ encryption: event.target.value });\n\n};\n\nonHIDDENchange = () => {\n  this.setState({ hidden: !this.state.hidden });\n\n};\n\nmakeQRcode=()=>{\n  this.setState({ makeQR: true});\n  this.setState({ textEditable: true});\n  \n}\n\ndownloadPNG =()=>{\n  this.setState({ downloadPNG: true});\n}\n\n\ntryAgain=()=>{\n  window.location.reload(false);\n}\n\nseeQRbtn(){\n   this.setState({ seeQRbtn: false});\n}\n\nshouldComponentUpdate(){\n\n  // if(this.state.ssid.length > 0){\n  //   element.addEventListener(\"click\", handler);\n  // }\n\n  return true;\n}\n\n  render() {\n    return (\n\n      \n      <div className={classes.App}>\n\n       \n\n      <div className={classes.noPrint}>\n        <h1>WiFi QR Code Genarator</h1>\n\n        <table className={classes.table}>\n          <tr>\n            <td>\n            <Input\n            onSSIDchange={this.onSSIDchange} \n            onPASSWORDchange={this.onPASSWORDchange} \n            onENCRYPTIONchange={this.onENCRYPTIONchange} \n            onHIDDENchange={this.onHIDDENchange} \n            state={this.state} \n\n        />\n            </td>\n          </tr>\n          <tr>\n            <td>\n            { this.state.makeQR ? (\n\n                <div>\n                  <button onClick={this.tryAgain} className={classesBtn.button}>Try Again</button>\n\n                </div>\n                \n              ) :  \n              <button onClick={this.makeQRcode}\n               className={classesBtn.button}\n               disabled={this.state.seeQRbtn}\n               >Click Here</button> }\n           \n            \n\n            </td>\n          </tr>\n        </table>\n    \n        </div>\n        \n\n        { this.state.makeQR ? (\n\n                <div><QrCode data={this.state}/> </div>\n        ) :  null }\n\n\n          <br></br>\n          <br></br>\n          <div className={classes.noPrint}><Aritcle/></div>\n          \n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2vBGD\",\"noPrint\":\"App__noPrint__29U3i\",\"table\":\"App__table__15fDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button__button__3UoNd\",\"buttonClickHere\":\"button__buttonClickHere__3rAGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QrCode\":\"qrCode__QrCode__12PfU\",\"Print\":\"qrCode__Print__3a7qG\",\"noPrint\":\"qrCode__noPrint__zI90S\",\"table\":\"qrCode__table__3uVZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"input__table__P1wya\",\"input\":\"input__input__1xwC3\",\"inputCheckBox\":\"input__inputCheckBox__2XQmp\"};"],"sourceRoot":""}